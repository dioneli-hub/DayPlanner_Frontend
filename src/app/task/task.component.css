.error-message {
    color: red;
    font-size: 14px;
    margin-top: 5px;
  }
  
.radio-label{
    margin-right: 10px;
}

i.fa-repeat{
    margin-left: 2px;;
}
.card{
    border: none;
    border-radius: 12px;
    box-shadow: -2px 0 1px 0 #a49f9f; /* shadow to the left */
}

.task-text {
    display:inline-block;
    color: black;
    text-decoration: none;
    font-weight: 500;
}

.btn.disabled{
    border: none;
}

.btn-completion-status:focus {
    border:none;
}
.btn-completion-status :hover {
    color: green;
}

/* .btn-delete:focus{
    border:none;
}

.btn-delete:hover {
    color: red;
} */



/*grid styling*/
.task-card{
    height: 120px;
    display: grid;
    grid-template-columns: [first] 4fr [divide-one] 5fr [divide-two] 1fr[end];
    grid-template-rows: [row-start ]1fr [row-middle-one] 2fr[row-middle-two] 1fr [row-end];
    justify-items: start; 
    align-items: start;
}


.task-board {
    grid-column-start: first;
    grid-column-end: divide-one;
    grid-row-start: row-start;
    grid-row-end: row-middle-one;
    justify-self: start;

    color: grey;
    font-size: smaller;
}

.task-content {
    grid-column-start: first;
    grid-column-end: divide-one;
    grid-row-start: row-middle-one;
    grid-row-end: row-middle-two;
}

.task-due{
    grid-column-start: first;
    grid-column-end: divide-one;
    grid-row-start: row-middle-two;
    grid-row-end: row-end;
    justify-self: start;

    color: grey;
    font-size: smaller;
}


.performer-marker{
    grid-column-start: divide-one;
    grid-column-end: divide-two;
    grid-row-start: row-start;
    grid-row-end: row-middle-one;

    color: grey;
    font-size: smaller;
}

.task-performer{
    grid-column-start: divide-one;
    grid-column-end: divide-two;
    grid-row-start: row-middle-one;
    grid-row-end: row-middle-two;
    justify-self: start;
    align-self: center; 
}

.task-delete-button {
    grid-column-start: divide-two;
    grid-column-end: end;
    grid-row-start: row-middle-one;
    grid-row-end: row-end;
    justify-self: end;
    align-self: end; 
}

.child-task-icon{
    grid-column-start: divide-two;
    grid-column-end: end;
    grid-row-start: row-start;
    grid-row-end: row-middle-one;
    justify-self: end;
    align-self: end; 
    color:gray;
}

/*styling select*/

.performer-box{
    width: 170px; /*170*/
    font-size: smaller;
    border-radius:0;
    overflow: hidden; /* cut whatever cannot suit into container */
    padding-right: 5px; 
    text-overflow: ellipsis; /*adding dots*/
    white-space: nowrap;
}

.inactive-performer-info{
    font-size: smaller;
    margin-left: 10px;
    color: grey;
}

/*due date change area*/
.task-due > button {
    border: none;
    padding: 0;
    padding-bottom: 4px;
    margin: 0;
    color:gray;
}

.task-due > button:hover {
    border: none;
    color: black;
}

.task-due > button:focus {
    border: none;
    color: black;
}

.task-due > input {
    border: none;
    background-color: inherit;
    width: 0px;
}

.task-due > input:focus {
    border: none;
}

.task-due > input:active {
    border: none;
}

/* 
.recurring-type-container {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
  }

.recurring-type-container input[type="radio"] {
    display: none;
  }

  .recurring-type-container label {
    position: relative;
    padding-left: 30px;
    cursor: pointer;
  }
  
  .recurring-type-container label:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 20px;
    height: 20px;
    border: 2px solid #ccc;
    border-radius: 50%;
    background-color: transparent;
  }

  input[type="radio"]:checked + label:before {
    background-color: #3498db;
    border-color: #3498db;  } */

    .recur-number-container > label {
        display: block;
        margin-bottom: 2px;
        margin-top: 10px;
      }
      
    .recur-number-container > label > input[type="number"] {
        width: 55px;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 15px;
      }
      
      /* Style for when the input is in focus */
    .recur-number-container >  label>input[type="number"]:focus {
        outline: none;
        /* border-color: var(--primary-color);
        box-shadow: 0 0 5px var(--primary-color-hover); */
        border-color:lightgray;
        box-shadow: 0 0 5px lightgray;
      }

    .recurrence-popover-form> button.confirm-btn {
        margin-top:10px;
        margin-left:30%;
    }

    input[type='radio'] {
        accent-color: var(--primary-color);
    }
